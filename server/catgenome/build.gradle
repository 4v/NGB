import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        // enable this to use snapshot versions of Gretty:
        // maven { url "http://oss.jfrog.org/artifactory/oss-snapshot-local" }
    }

    dependencies {
        classpath "org.akhikhl.gretty:gretty:+"
    }
}

plugins {
    id "net.saliman.properties" version "1.4.4"
    id "org.sonarqube" version "2.2"
}

group "com.epam"
version "1.0-SNAPSHOT"

// >>>>> building for different profiles
// >>>>> For configuration use -Pprofile=profile_name with run ('dev' is used by default)
loadConfiguration()

def loadConfiguration() {
    def profile = hasProperty("profile") ? profile : "dev"
    def database = hasProperty("database") ? database : "h2"
    def buildNumber =  hasProperty("buildNumber") ? buildNumber : "dev"
    project.ext.setProperty("profile", profile)
    project.ext.setProperty("database", database)
    project.ext.setProperty("buildNumber", buildNumber)
}

apply from: "profiles.gradle"

// >>>>> applied plugins
apply plugin: "war"
apply plugin: "org.akhikhl.gretty"

apply plugin: "checkstyle"
apply plugin: "pmd"
apply plugin: "jacoco"

war {
    archiveName "catgenome.war"
}

test {
    jvmArgs = ["-XX:MaxDirectMemorySize=7937m"]
}

// >>>>> defines external project properties, e.g. external dependencies versions
ext {
    versionSlf4j = "1.7.5"
    versionJackson = "2.7.5"
    versionSpring = "4.3.1.RELEASE"
    versionJayWayJsonPath = "1.1.0"
    versionSpringSecurity = "4.0.3.RELEASE"
    versionJUnit = "4.12"
    versionUnitils = "3.4.2"
    versionJavaXServlet = "3.1.0"
    versionMockito = "1.10.19"
    versionLucene = "6.0.0"
}

// >>>>> repositories that should be used to find any external dependencies
repositories {
    jcenter()
    flatDir {
        dirs 'lib'
    }
}
// >>>>> external dependencies used to compile and/or run application
dependencies {
    // >>>>> dependencies used to compile application and include into artifact
    // Spring Framework
    compile group: "org.springframework", name: "spring-tx", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-aop", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-web", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-jdbc", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-core", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-beans", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-webmvc", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-context", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-context-support", version: project.ext.versionSpring
    compile group: "org.springframework", name: "spring-expression", version: project.ext.versionSpring
    compile group: "org.springframework.security", name: "spring-security-core", version: versionSpringSecurity
    compile group: "org.springframework.security", name: "spring-security-web", version: versionSpringSecurity
    compile group: "org.springframework.security", name: "spring-security-config", version: versionSpringSecurity
    // Jackson
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: versionJackson //project.ext.versionJackson
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version:  versionJackson //project.ext.versionJackson
    compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: versionJackson //project.ext.versionJackson
    // Apache Commons
    compile group: "commons-io", name: "commons-io", version: "2.4"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.0"
    compile group: "org.apache.commons", name: "commons-collections4", version: "4.0"
    compile group: "commons-validator", name: "commons-validator", version: "1.5.0"
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    // Logging
    compile group: "org.apache.logging.log4j", name: "log4j", version: "2.5"
    compile group: "org.slf4j", name: "slf4j-api", version: project.ext.versionSlf4j
    compile group: "org.slf4j", name: "slf4j-log4j12", version: project.ext.versionSlf4j
    // Samtools
    compile group: "com.github.samtools", name: "htsjdk", version: "2.2.4"
    // Swagger
    compile group: "org.webjars", name: "swagger-ui", version: "2.0.24"
    compile group: "com.mangofactory", name: "swagger-springmvc", version: "1.0.2"
    // H2 Database Engine & Connection pool
    compile group: "com.mchange", name: "c3p0", version: "0.9.5.1"
    compile group: "com.h2database", name: "h2", version: "1.3.176"
    compile group: "org.aspectj", name: "aspectjweaver", version: "1.8.7"
    compile group: 'org.postgresql', name: 'postgresql', version: "9.4-1206-jdbc4"
    // Flyway database migration to update embedded database when application starts
    compile group: "org.flywaydb", name: "flyway-core", version: "3.2.1"
    //Amazon s3
    compile group: "com.amazonaws", name: "aws-java-sdk-s3", version: "1.10.51"

    compile 'commons-fileupload:commons-fileupload:1.3.1'

    compile group:"org.springframework.security.oauth", name:"spring-security-oauth2", version: "1.0.5.RELEASE"
    //Ehcache
    compile group: "net.sf.ehcache", name: "ehcache", version: "2.10.1"
    // Lucene
    compile group: "org.apache.lucene", name:"lucene-core", version: versionLucene
    compile group: "org.apache.lucene", name:"lucene-queryparser", version: versionLucene
    compile group: "org.apache.lucene", name:"lucene-analyzers-common", version: versionLucene
    compile group: "org.apache.lucene", name:"lucene-grouping", version: versionLucene
    compile group: "org.apache.lucene", name:"lucene-facet", version: versionLucene

    //hadoop
    compile group: "org.apache.hadoop", name:"hadoop-client", version: "2.2.0"

    compile group: "org.jetbrains.bio", name: "big", version: "0.3.4"

    // >>>>> dependencies used to compile tests; in fact no need to include them into artifact
    testCompile group: "junit", name: "junit", version: project.ext.versionJUnit
    testCompile group: "org.unitils", name: "unitils-core", version: project.ext.versionUnitils
    testCompile group: "javax.servlet", name: "javax.servlet-api", version: project.ext.versionJavaXServlet
    testCompile group: "org.springframework", name: "spring-test", version: project.ext.versionSpring
    testCompile group: "com.jayway.jsonpath", name: "json-path", version: project.ext.versionJayWayJsonPath
    testCompile group: "com.jayway.jsonpath", name: "json-path-assert", version: project.ext.versionJayWayJsonPath
    testCompile group: "org.mockito", name: "mockito-all", version: project.ext.versionMockito
    testCompile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.13.v20161014'
}

// >>>>> To configure Run/Debug with Local Tomcat on dev environment an exploded WAR archive should be
// >>>>> created. See also: https://issues.gradle.org/browse/GRADLE-1445
task warExploded(type: Sync) {
    into "$buildDir/catgenome"
    with war
}
war.dependsOn warExploded

// >>>>> processes profiles
processResources.dependsOn copyConfiguration
processTestResources {
    filesNotMatching("**/templates/**") {  // To exclude binary files, because they are being broken by filtering
        filter(ReplaceTokens, tokens: project.filterTokens)
    }
}

// >>>>> configuration for pmd plugin
pmd {
    //ruleSetConfig = resources.text.fromFile("config/pmd/pmd-ruleset.xml")
    ruleSetFiles = files("config/pmd/pmd-ruleset.xml", "config/pmd/pmd-ruleset-feature-index-manager.xml")
}

checkstyle {
    toolVersion = "7.2"
}

def excludePattern = 'VgPb'
def excludePatternAntStyle = '**/' + excludePattern + '*'

tasks.withType(Checkstyle) {
    exclude excludePatternAntStyle
}
tasks.withType(Pmd) {
    exclude excludePatternAntStyle
}

def escape(String s) {
    return s.replace("\\", "\\\\")
}
